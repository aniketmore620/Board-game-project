name: CICD-PIPELINE

on:
  push:
    branches: [ "main" ]
    
jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn package --file pom.xml
      
    - uses: actions/upload-artifact@v4
      with:
        name: Boardgame
        path: target/*.jar
        
    - name: Trivy file scan
      run: |
        trivy fs --format table -o trivy-fs-report.html .
       
    - name: sonarqube scan 
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
         
    - name: installing jq(jason-query)
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: SonarQube Quality Gate Check
      id: sonarqube-quality-gate-check
      uses: SonarSource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
               
    - name: Docker Setup QEMU
      uses: docker/setup-qemu-action@v3

    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: building docker image
      run: |
        docker build -t moreaniket/boardgame:latest

    - name: Trivy docker image scan
      run: |
       trivy image scan --format table -o trivy-fs-report.html docker build -t moreaniket/boardgame:latest 

    - name: Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: docker push
      run: |
          docker push moreaniket/boardgame:latest


    - name: Kubernetes CLI (kubectl)
      uses: tale/kubectl-action@v1
      with: 
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}
    - run: |
          kubectl apply -f deployment-service.yaml -n webapps
          kubectl get svc -n webapps
    
    
          
    

